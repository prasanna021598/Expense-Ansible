- name: backend configurations for expense project
  hosts: Backend
  become: true
  vars:
    login_host: db.itindustry.online
    login_password: ExpenseApp@1
  tasks:
  - name: disabling nodejs 
    ansible.builtin.command: dnf module disable nodejs -y
  - name: enabling version 20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  - name: installing nodejs and mysql
    ansible.builtin.dnf:
      name : "{{ item }}"
      state: installed
    loop:
      - nodejs
      - mysql
  - name: adding user
    ansible.builtin.user:
      name: expense
      state: present
  - name: create directory when not present
    ansible.builtin.command: mkdir /app
    when: changed is true
  - name: Dowloading application code to tmp directory
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
  - name: Unzip the file that is tmp directory
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes
  - name : npm install in app directory
    ansible.builtin.command: npm install
    args:
      chdir: /app
  - name: copying backend service file to the directory
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service
      remote_src: yes
  - name: install python mysql dependencies
    ansible.builtin.pip: 
      name:
      - PyMySQL # to connect MySQL DB from Ansible
      - cryptography
      executable: pip3.9 # pip3.11 if python version is 3.11

  - name: import data into mysql
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ login_password }}"
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      state: import
      name: all

  - name: deamon-reload
    ansible.builtin.systemd_service:
      state: restarted
      daemon_reload: true
  - name: start and enable backend service
    ansible.builtin.service:
      state: restared
      enabled: yes
  
